plugins {
    id 'java'
    id 'com.gradle.plugin-publish' version '1.3.1'
}

group = 'fr.monsieurdoceo'
version = '0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
}

gradlePlugin {
    website.set("https://github.com/monsieurdoceo")
    vcsUrl.set("https://github.com/monsieurdoceo")
    plugins {
        create("FilizerPlugin") {
            id = "io.github.monsieurdoceo.filizer"
            implementationClass = "fr.monsieurdoceo.filizer.FilizerPlugin"
            displayName = "Filizer API"
            description = "An API paperMC plugin to configure and manage files on the server."
            tags = ['files', 'api', 'java', 'server', 'github', 'minecraft', 'paper']
        }
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
